package com.zhanyr.muiltyThread;/** * @author zhanyr *写一个线程死锁的例子 */public class DeadLock implements Runnable {	private boolean flag;	private Object objecta = new Object();	private Object objectb = new Object();	public DeadLock(boolean flag, Object obj1, Object obj2) {		this.flag = flag;		this.objecta = obj1;		this.objectb = obj2;	}	@Override	public void run() {		if (flag) {			synchronized (objecta) {				System.out.println("if have objecta");				synchronized (objectb) {					System.out.println("if have objectb");				}			}		} else {			synchronized (objectb) {				System.out.println("else have objectb");				synchronized (objecta) {					System.out.println("else have objecta");				}			}		}	}	public static void main(String[] args) {		Object objecta = new Object();		Object objectb = new Object();		Thread t1 = new Thread(new DeadLock(true, objecta, objectb));		Thread t2 = new Thread(new DeadLock(false, objecta, objectb));		t1.start();		t2.start();	}}